\section{Path Visibility Faults}\label{sec:visibility}

Recall that {\em path visibility} specifies that every router that has a
usable path to a destination learns at least one valid route to that
destination. It is an important property because it ensures that, if the
network remains connected at lower layers, the routing protocol does not
create any network partitions.  Table~\ref{tab:rcc_tests} shows
many conditions that \rcc checks related to path visibility; in this
section, we focus on iBGP configuration faults that can violate
path visibility and explain how \rcc detects these faults.

%Routers within an AS disseminate eBGP-learned routes to
%other routers in the AS using iBGP.  
%If two routers in the same AS have the same loopback address, visibility
%can be violated if one of those routers hears a route from the
%other, and discards it, thinking it advertised the route itself.
%The simplest approach is to propagate routes within the AS involves
%configuring iBGP 
%sessions between every pair of BGP-speaking routers within the AS, (a
%``full-mesh'' topology), where each router selects a best route from
%among its available choices and, if that route was learned via eBGP,
%readvertises that route over its iBGP sessions.  

Ensuring path visibility in a ``full mesh'' iBGP topology is reasonably
straightforward; \rcc checks that every router in the AS has an
iBGP session with every other router.  If this condition is satisfied,
every router in the AS will learn all eBGP-learned routes.

%Because a ``full mesh'' iBGP topology scales poorly, operators often
%employ {\em route reflection}~\cite{rfc2796}.  A subset of the
%routers are configured as {\em route reflectors}, with the configuration
%specifying a set of other routers as {\em route reflector clients}.
%Each route reflector readvertises its best route according to the
%following rules: (1)~if the best route was learned from an iBGP peer,
%the route is readvertised to all of its route reflector clients; (2)~if
%it was 
%learned from a client or via an eBGP session, the route is readvertised
%on all iBGP sessions.  
%If a route reflector client has
%multiple route reflectors, those reflectors must share all of their
%clients and belong to a single ``cluster''.

A route reflector may itself be a client of another route reflector.
Any router may also have iBGP sessions with other routers.
Recall from Section~\ref{sec:visibility_def} that we use the set of
reflector-client relationships between routers in an AS to define a 
graph $G$, where each router is a node and each
session is either a directed or undirected edge: a client-reflector
session is a directed edge from 
client to reflector, and other iBGP sessions are undirected edges.  An
edge exists if and only if (1)~the configuration of each router endpoint
specifies the loopback address of the other endpoint\footnote{ If a
router establishes an iBGP session with a router's {\em loopback} address,
then the iBGP session will remain active as long as that router is
reachable via {\em any} IGP path between the two routers.  If a router
establishes an iBGP session with an interface address of another router,
however, the iBGP session will go down if that interface fails, even if
an IGP path exists between those routers.} and (2)~both routers agree
on session options (\eg, MD5 authentication parameters).  $G$
should also not have partitions at lower layers.  We say that $G$ is
{\em acyclic} if $G$ has no sequence of directed and undirected edges
that form a cycle.  To ensure the existence of a stable path assignment,
$G$ should be acyclic.

\begin{figure}[t]
%\input{figures/rr_example}
\centering\epsfig{file=rcc/figures/rr_example_fig.eps, width=0.75\linewidth}
\caption[An iBGP route reflector topology that violates path visibility.]{
In this iBGP configuration, route
$r_2$ will be distributed to all the routers in the AS, but
$r_1$ will not.  $Y$ and $Z$ will not learn of $r_1$, leading to a
network partition that won't be resolved unless another route to
the destination appears from elsewhere in the AS.}
\label{f:ibgp_vis_violation}
\end{figure}

%% \begin{figure}
%% \input{figures/visibility_example}
%% \caption{BGP connectivity diagram for an AS with three routers on the
%%   west coast and one on the east coast.  Solid lines denote iBGP
%%   sessions, and dotted lines denote eBGP sessions.}
%% \label{fig:visibility_example}
%% \end{figure}

Even a connected directed acyclic graph of iBGP sessions can violate
path visibility.  For example, in Figure~\ref{f:ibgp_vis_violation},
routers $Y$ and $Z$ do not learn route $r_1$ to destination $d$ (learned
via eBGP by router $W$), because $X$ will not readvertise routes learned
from its iBGP session with $W$ to other iBGP sessions.  We call this
path visibility fault an {\em iBGP signaling partition}; a
path exists, but neither $Y$ nor $Z$ has a route for it.  Note that
simply adding a regular iBGP session between routers $W$ and $Y$ would
solve the problem.

%This potentially active fault can
%prevent routers from learning any route to a destination, even
%though a path exists.  
In addition to causing network partitions, iBGP signaling partitions may
result in suboptimal routing.
For example, in Figure~\ref{f:ibgp_vis_violation}, even if $Y$ or $Z$
learned a route to $d$ via eBGP, that route might be worse than
the route learned at $W$.  In this case, $Y$ and $Z$ would ultimately
select a suboptimal route to the destination, an event that an operator
would likely fail to notice.


%
%% Visibility violations have the potential for hard-to-detect network
%% partitions (mainly because the location of the problem could be far
%% from the place the misconfiguration has happened).  There are other
%% problems caused by lack of visibility too, as shown in
%% Figure~\ref{fig:visibility_example}.  Assume that $w_2$, $w_3$, and
%% $e_1$ are eBGP sessions to the same neighboring AS that advertises a
%% route to destination $d$.  If router $EC_1$ were misconfigured such
%% that it was not readvertising its routes to the $WC$ routers, then
%% none of the $WC$ routers would be able to reach $d$, even though a
%% valid path to $d$ exists via $EC_1$.  Moreover, if the AS in the
%% figure has routers separated by long-haul links (\eg the ``WC''
%% routers were on the West Coast of the US and the ``EC'' routers were
%% on the East Coast), and the route to $d$ were not advertised by either
%% $WC_2$ or $WC_3$, then these routers would send packets to $d$ via
%% $EC$ instead of sending packets via the nearest available exit point.
%% In this example, if the $WC_1\leftrightarrow WC_2$ and
%% $WC_1\leftrightarrow WC_3$ sessions were non-existent or had failed,
%% then $WC_1$ would choose the sub-optimal route to $d$ via $e_1$.
%

\rcc detects iBGP signaling partitions.
It determines if there is {\em any}
combination of eBGP-learned routes such that at least one router in the
AS will not learn at least one route to the destination, by performing a
check based on the following result, which we proved in
Section~\ref{sec:visibility_def}. 

\vskip 0.1in
%\begin{theorem}\label{thm:vis}

\noindent {\bf Theorem~\ref{thm:vis}.} 
{\em Suppose that the graph defined by an AS's iBGP relationships, $G$,
is acyclic.  Then, $G$ does not have a signaling partition if, and only
if, the BGP routers that are not route reflector clients form a full
mesh.}
%\end{theorem}
\vskip 0.1in

%% \begin{proof}
%% Call the set of routers that are not reflector clients the
%% ``top layer'' of $G$.  If the top layer is not a full mesh,
%% then there are two routers $X$ and $Y$ with no iBGP session between
%% them, such that no route learned using eBGP at $X$ will ever be
%% disseminated to $Y$, since no router readvertises an
%% iBGP-learned route.

%% Conversely, if the top layer is a full mesh, observe that {\em if} a
%% route reflector 
%% has a route to the destination, then all its clients
%% have a route as well.  Thus, if every router in the
%% top layer has a route, all routers in the AS will have a route.  If any
%% router in the top layer learns a route through eBGP, then all the
%% top layer routers will hear of the route (because the top layer is a
%% full mesh).  Alternatively, if no router at the top layer hears an
%% eBGP-learned route, but some other router in the AS does, then that
%% route propagates up a chain of route reflectors (each client sends it to
%% its reflector, and the reflector sends it on all its iBGP sessions) to
%% the top layer, from there to all the other top layer routers, and from
%% there to the other routers in the AS.
%% \end{proof}


\rcc checks this condition by constructing the iBGP signaling
graph $G$ from the {\tf sessions} table (Table~\ref{tab:if}). It assumes
that the IGP graph is connected, then determines whether $G$ is
connected and acyclic and whether the routers at the top layer of $G$ form
a full mesh.

