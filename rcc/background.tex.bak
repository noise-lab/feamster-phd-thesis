\section{Background and Motivation}
\label{s:background}
\label{s:nanogproblems}

%In this section, we explain why verifying BGP configuration is difficult
%and present an overview of BGP, paying particular attention to aspects
%of BGP that can cause incorrect behavior.  

%% We briefly present an overview of today's interdomain routing
%% infrastructure.  Then, we study the extent and nature of routing
%% misconfiguration as discussed on North American Network Operators Group
%% (NANOG) mailing list.




%\begin{itemize}
%\item Overview of existing routing infrastructure.
%\item Emphasize that configuration is mechanistic and distributed.  (A lot
%like a distributed program)
%\item Sense of scale (number of routers, etc.)
%\end{itemize}

Today's Internet comprises over 17,000 independently operated ASes that
exchange reachability information using BGP~\cite{rfc1771}.
%BGP has three
%distinct components: (1)~the {\em protocol} itself, which defines
%how routes are exchanged and the content of those routes; (2)~the {\em
%decision process}, which defines how each router selects a best route
%from multiple options; and (3)~the {\em configuration}, which
%affects route attributes, as well as how (and whether) routes are
%exchanged within the AS and with other ASes.  
BGP distributes routes to destination prefixes via incremental updates.
Each router selects one best route to a destination, announces that
route to neighboring routers, and sends updates when the best route
changes.  Each BGP update contains several attributes.  These include
the {\em destination prefix} associated with the route; the {\em AS
path}, the sequence of ASes that advertised the route; the {\em
next-hop}, the IP address that the router should forward packets to in
order to use the route; the {\em multi-exit discriminator (MED)}, which
a neighboring AS can use to specify that one route should be more (or
less) preferred than routes advertised at other routers in that AS; and
the {\em community} value, which is a way of labeling a route.
% (\eg, a router might label an incoming customer
%route so that when the route is readvertised internally, other routers
%can determine that it was learned from a customer).

%% BGP's protocol definition determines how routers select and propagate
%% routes, but 
BGP's configuration affects which routes are
originated and propagated, how routes are modified as they propagate,
which route each router selects from multiple options, and
how routes propagate between routers.
A single AS can have 
anywhere from two or three routers to many hundreds of routers.  A
single router's configuration can range from a few hundred lines to more
than 10,000 lines.  In practice, a large backbone network may have more
than a thousand different policies configured across hundreds of
routers.



%% BGP configuration is mechanistic and distributed.  Because BGP's global
%% behavior is determined by configuration that is distributed across all
%% of the routers in a network, configuring BGP is much like writing a
%% distributed program.  Given that there is presently no way to verify the
%% correctness of the configuration, it is not surprising that mistakes are
%% frequent and continual.  


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\begin{figure}[t]
\begin{center}
%{\small
%\centering\begin{tabular}{rp{2.75in}|rrr|r}
%\input{nanog_table}
%\end{tabular}
%}
\centering\epsfig{file=rcc/figures/nanog_table.eps, angle=270, width=\linewidth}
\end{center}
\caption{Number of threads discussing routing
  faults on the NANOG mailing list.
%  Non-parenthesized numbers count threads addressing actual problems;
%  parenthesized numbers also count generic discussion threads (\eg,
%  questions, documents) on the topic.
}
\label{tab:nanogerrors}
\end{figure}


%The North American Network Operators Group (NANOG) has a mailing
%list where network operators report  
%operational problems, discuss operational issues,
%etc.~\cite{nanog-list}.  
%
To understand the extent to which this complex configuration is
responsible for the types of failures that occur in practice, we studied
the archives of the North American Network Operators Group (NANOG)
mailing list, where network operators report operational problems,
discuss operational issues, etc.~\cite{nanog-list}.  Because the list
has received about 75,000 emails over the course of ten years, we first
clustered the emails by thread and pruned threads based on a list of
about fifteen keywords (\eg, ``BGP'', ``issue'', ``loop'', ``problem'',
``outage'').  We then reviewed these threads and classified each of them
into one or more of the categories shown in
Figure~\ref{tab:nanogerrors}.

This informal study shows some clear trends.  First, many routing
problems are caused by configuration faults.  Second, the same
types of problems continually appear.  Third, BGP
configuration problems continually perplex even experienced network
operators.  A tool that can detect configuration faults will clearly
benefit network operators.

%% {\em Prefix filtering} includes problems related to either blocking
%%   prefixes that shouldn't be blocked or leaking 
%%   prefixes, such as private addresses, that should be filtered.  
%% {\em  Leaked routes} involve globally visible routes
%%   that should have been filtered.
%% {\em Hijacked routes} are cases where an AS announces address space that it does not own.
%% {\em Global route visibility} are cases where
%%   some prefix that should be globally visible is not.  These problems
%%   most often occur when an AS announces recently allocated address space
%%   that various ISPs mistakenly continue to filter. 
%% {\em Oscillations} refers to persistent route oscillation.  {\em Routing
%%   instability} describes any problem that involves many routes being continually
%% advertised and withdrawn.
%% {\em Attribute manipulation} refers to problems that involve
%%   manipulation of route attributes, such as setting up a backup route.
%% %  This category includes problems where an
%% %  AS does not treat a certain route as a backup route
%% %  despite a neighboring AS's explicit request.
%% %
%% {\em Routing loops} are
%%   cases where an operator posts or describes a traceroute that contains a routing
%%   loop.  {\em Blackholes} are cases where an operator either
%%   posts or describes a traceroute that does not loop but fails to reach its destination.
%%  {\em iBGP-related} refers to any problems such as intra-AS loops.


%% Although this analysis is informal, our observations
%% suggest some clear trends.  First, many interdomain routing problems
%% are caused by configuration errors.  Second, the state of
%% affairs has not improved over the last 10 years: the same types of
%% configuration errors and problems continually appear.  Third, BGP
%% configuration problems continually perplex even experienced network
%% operators. {\em Guaranteeing correct operation requires more than a few
%%   simple tweaks to the protocol or configuration language: operators need a
%%   systematic framework for verifying BGP's correctness.}


%This
%finding allows each network to verify its configurations
%independently.

%% To scope the problem, we
%% must determine what can be verified from the configurations of a single
%% AS, and what aspects of correctness involve coordination.  Although
%% previous work on BGP convergence might give the impression that a single
%% network has very little control over global correctness, we find that
%% there are many aspects of correctness aside from convergence that are
%% quite self-contained.  In this paper, we focus on verifying BGP
%% configuration correctness {\em within a single AS}.

%the configuration of each
%router must be analyzed with respect to the configuration of other
%routers. 
% For example, two routers that each have an iBGP session with a
%  third router but do not have iBGP sessions with each other will cause
%  a partition because a router will not ordinarily re-advertise
%  iBGP-learned routes 
%  via an iBGP session.  


%\subsection{BGP: Protocol and Configuration}\label{sec:protocol}


%this is incorrect.  I dont think local pref is ``carried'' in a
%route on the wire.  Routes also carry an important attribute called {\em
%local preference}, which eBGP-speaking routers assign to routes as they
%are learned from other ASes.  Operators use local preference to affect
%which route the BGP decision process selects as a best route.

%\subsubsection{BGP Operation and Configuration}\label{sec:protocol}


%One of BGP's distinguishing features is its flexible configuration
%language, which is {\em vendor specific}.  Most of this paper deals with
%the details of BGP configuration (and misconfiguration).  

%% \begin{table}
%% {\scriptsize
%% \begin{center}
%% \begin{tabular}{|l|} \hline
%% {\bf 1. Highest local preference} \\
%% {\bf 2. Shortest AS path length} \\
%% %3. Lowest origin type (generally not used)  \\
%% {\bf 3. Lowest MED} (compared among routes with same next-hop AS only) \\
%% {\bf 4. eBGP-learned over iBGP-learned} \\
%% {\bf 5. Lowest path cost to next hop} (based on the interior routing
%% protocol path) \\
%% {\bf 6. Lowest router-id of BGP speaker (or oldest route)}  \\
%% \hline
%% \end{tabular}
%% \vspace{-0.2in}
%% \end{center}
%% }
%% \caption{The BGP path selection process (step 4). Obsolete steps (\eg,
%%   ``lowest origin type'') are omitted.} 
%% \label{tab:decision}
%% \end{table}

%% We describe BGP route propagation in terms of six steps.
%% {\em At each step, we describe how configuration affects BGP's 
%% behavior.}  We will refer to these steps throughout the
%% paper: 
%% \begin{enumerate}
%% \itemsep=-1.5pt
%% \item {\bf Origination.} Configuration allows BGP-speaking router to
%%   {\em originate} a route for a
%%   prefix (\ie, advertise a route that it did not learn from another
%%   router), indicating that it is the source for that prefix.
%% %\footnote{In
%% %  rare cases, non-BGP speaking routers can also originate routes.}
%% \item {\bf Export.} A router {\em exports} the route to a neighboring AS
%% on an {\em eBGP} session.  Configuration defines an {\em export policy}
%% for each session that defines which routes are advertised to each
%% neighbor.  
%% %A 
%% %network operator uses export policy to control route propagation in
%% %conformance with contractual agreements with other ASes.
%% % For
%% %example, an AS should typically not advertise routes from one of its
%% %providers to another, because doing so would cause the network to
%% %transit packets between its two providers.  
%% %Operators use export policy
%% %to implement contractual agreements with other ASes.
%% \item {\bf Import.} 
%% BGP configuration defines {\em filters} and {\em import policies} for
%% each session. The router's filters discard certain routes 
%% before importing them. 
%% The router also discards routes whose next-hop attribute refers to an IP
%% address not present in the router's forwarding table.  The import policy
%% may assign a {\em local preference} to the imported route.
%% %which it does not have a route in its routing table to the router's
%% %next-hop IP address (for iBGP, the next-hop should be in the IGP; for
%% %eBGP, the next-hop is usually the opposite end of the BGP session).
%% %Network operators use BGP configuration to indirectly affect which route
%% %each router selects as the best route to a destination.  
%% %% BGP configuration allows an operator to assign an {\em import policy} to
%% %% each BGP session.  An import policy specifies specific actions that the
%% %% router should take upon receiving a route on that session; for example,
%% %% the policy may filter certain routes and assign local preference values
%% %% to the routes that it accepts.
%% \item {\bf Selection.} The router {\em selects} the best route from the
%% set of routes to the destination according to a {\em de facto} standard
%% BGP decision process~\cite{www-cisco-bgp-path,id-bgp4}, summarized in 
%% Table~\ref{tab:decision}.
%% % is a {\em de facto} standard that each vendor
%% %defines to behave in roughly the same
%% %way.  The router applies the steps
%% %shown in the table to determine its best route to each destination.
%% %By altering the attributes of advertised routes in the router
%% %configuration, 
%% A network operator can affect route selection by using import policy to
%% modify route attributes but cannot reconfigure
%% the decision process itself.
%% %importing router's path choice.  For example, the first step in the
%% %decision process is based on local preference, which operators can
%% %manipulate using configuration.
%% %% If multiple routes to a
%% %% destination exist, the router applies the steps in
%% %% Table~\ref{tab:decision} to eliminate candidate routes.  The router
%% %% first eliminates all candidate routes that do not have the highest local
%% %% preference value; among the remaining routes, the router eliminates all
%% %% routes that do not have the shortest AS path length, and so forth, until
%% %% a single best route remains.
%% %Because BGP configuration defines how various route attributes are
%% %modified, a network operator can use BGP configuration to indirectly
%% %{\em affect the outcome of the route selection process}.
%% \item {\bf Modification.} The router consults its configuration and {\em
%% modifies} one or more of the best route's attributes (\eg, the
%% ``next-hop'' field).
%% % before sending the route to the other
%% %routers in its AS.  
%% %BGP configuration determines how the routers in an
%% %AS modify each route before readvertisement.
%% \item {\bf Intra-AS Propagation.} The routers inside the AS use {\em
%% iBGP} to propagate externally-learned routes, with each router selecting
%% the best route among a set of choices.  iBGP runs as an overlay over the
%% interior routing protocol (the interior gateway protocol, or {\em ``IGP''}).
%% %The traditional overlay topology is a ``full-mesh'', but this approach
%% %does not scale well.  A more scalable propagation technique is {\em
%% %  route reflection}.  The operator 
%% %specifies the iBGP topology with route reflection in router
%% %configurations. This topology usually requires fewer
%% %per-router BGP sessions than the full-mesh topology.
%% %% Routers that exchange routes via
%% %% iBGP are not always directly connected via iBGP.  Routers that are not
%% %% directly connected exchange routes using {\em route reflection}.  A
%% %% route reflector learns best routes from each of its iBGP neighbors,
%% %% selects a single best route, and readvertises that route to
%% %% its iBGP neighbors.
%% \end{enumerate}
%At the end of Step~6, all eBGP-speaking routers proceed to Step~2
%(export) and check if their best route to the destination should be
%exported to any other ASes.  

%% BGP configuration also defines session parameters (\eg, various timers)
%% The sessions specified in each router's configuration determine which
%% routers that router exchanges routes with, both within its own AS and
%% with other ASes.




%% \begin{itemize}
%% \itemsep=-1pt

%% \item {\em Route origination.} 
%% \item {\em Route propagation.}
%% \item {\em Session parameters.} 
%% \item {\em Policy.}  
%% \item {\em Route selection.} 
%% \item {\em Routing topology.}
%% \end{itemize}

%% BGP configuration essentially determines: (1)~the neighboring routers a
%% given router learns routing information (2)~the route the a router
%% selects as the best route to a destination prefix, and (3)~to which
%% neighboring routers the router should advertise that route.  The first
%% function applies to eBGP and iBGP, while the second and third functions
%% apply to eBGP only.

%session options, global router options, routing policies.  origination.
%% In addition to these three basic functions, BGP configuration allows a
%% router to {\em originate} routes to a destination prefixes.  If that
%% router has a route to a certain prefix in another routing protocol (or
%% via a static route), a network operator can configure the router to
%% advertise that route via BGP.  A common technique for doing this is
%% called {\em redistribution}.

%\fixme{eBGP: policies important, intradomain routing doesn't play
%a role.  iBGP: policies basically non-existent, but interactions with
%intradomain routing are paramount.}





%% They deploy a configuration, wait and
%% see whether the configuration has any undesirable effects, and revert
%% the configuration to a previous state if problems arise.

%% Because the effects of a BGP configuration error may appear far from the
%% source of the error and may not appear immediately (\eg, if the effects
%% of an error only appear after a failure), BGP configuration errors are
%% also notoriously difficult to diagnose.  

%Many errors could be avoided if operators could simply verify whether a
%particular configuration was correct before deploying it, but
%several aspects of BGP configuration make verification challenging in
%practice:

%Because BGP
%configuration behaves like a distributed program, it might seem that
%static analysis of BGP configuration could be useful for verifying
%correctness.


%%  {\em BGP's flexible modes of operation result in many possibilities for
%%   ``correct'' behavior.}  A BGP session can either be configured to
%%   exchange routes within an AS or with a neighboring AS.  A network
%%   operator will configure an eBGP session differently depending on the
%%   AS's relationship with a neighboring AS and also typically adjusts the
%%   behavior of eBGP sessions to achieve traffic engineering tasks, such
%%   as load balance.  Similarly, iBGP sessions can be configured to behave
%%   in a variety of ways (\eg, as a route reflector).  This
%%   flexibility makes a precise definition of correctness elusive and
%%   means that checking for correctness requires ascertaining what the
%%   intended behavior was in the first place.

