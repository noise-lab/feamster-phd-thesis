%%%
%%% introduction.tex
%%%

\section{Introduction}
\label{sec:intro}
%%%
%%% Operators needs models or their heads will explode
%%%
To control the flow of traffic through their networks, operators need
to know how configuration changes affect the decisions made by the
routers.  In large backbone networks, the selection of paths depends
on the routes advertised by neighboring domains and the internal
topology, as well as the interdomain routing policies and intradomain
link weights.  To avoid costly debugging time and catastrophic
mistakes, operators must be able to make predictions quickly based on
an accurate, network-wide model of the routing protocols.  In this
paper, we present efficient algorithms for computing the routing
decision at each router in an Autonomous System (AS).  In solving the
problem, we grapple with two features of the Border Gateway Protocol
(BGP) that leave routers with no consistent ranking of the candidate
routes and limit visibility into the routing options.

%The delivery of IP packets through the Internet depends on a large
%collection of routers that compute end-to-end paths in a distributed
%fashion, using standardized routing protocols.  Providing low latency,
%high throughput, and high reliability requires network operators to
%adjust routing protocol configuration when performance problems arise
%or network conditions change.  However, the complexity of the routing
%protocols, the large number of tunable parameters, and the size of the
%network make it extremely difficult for operators to reason about the
%effects of their actions.  The common approach of ``tweak and pray''
%is no longer acceptable in an environment where users have high
%expectations for performance and reliability~\cite{rfc3272}.  

\subsection{Backbone Network Engineering}
%%%
%%% eBGP and iBGP
%%%
To model the selection of routes inside a backbone network, we must
capture the interaction between three routing protocols, as shown in
Figure~\ref{fig:example}:

\begin{itemize}
\item \textbf{External BGP (eBGP):} The AS uses external BGP (eBGP)
to exchange route advertisements with neighboring domains.  For
example, the routers $W$, $X$, and $Y$ each have eBGP sessions with
neighboring ASes.  The routers may apply an {\em import\/} policy to
modify the attributes of the routes learned from the neighbor, with
the goal of influencing the decision process in
Table~\ref{tab:decision} that each router applies to select a single
best BGP route for each destination prefix.

\item \textbf{Internal BGP (iBGP):} The routers use internal BGP (iBGP)
to disseminate the routes to the rest of the network.  In the simplest
case, each pair of routers has an iBGP session, forming an ``full
mesh.''  If two routes are equally good through the first four steps
in Table~\ref{tab:decision}, the router favors an eBGP-learned route
over an iBGP-learned one.  In Figure~\ref{fig:example}, router $Z$
receives three iBGP routes, from routers $X$, $Y$, and $Z$, forcing
the decision to proceed to the next step in Table~\ref{tab:decision}.

\item \textbf{Interior Gateway Protocol (IGP):}
The routers inside the AS run an Interior Gateway Protocol (IGP) to
learn how to reach each other.  The two most common IGPs are OSPF and
IS-IS, which compute shortest paths based on configurable link
weights; the routers also use the IGP path costs in the sixth step in
Table~\ref{tab:decision}.  In Figure~\ref{fig:example}, router $Z$
selects the route with the smallest IGP path cost of $2$, learned from
router $X$\footnote{If two routes have the same IGP path cost, the
router performs an arbitrary tiebreak in the seventh step in
Table~\ref{tab:decision}.}.
\end{itemize}

\noindent
After completing the path-selection process, the router combines the
BGP and IGP information to construct a forwarding table that maps the
destination prefix to the outgoing link along the shortest path.  In
Figure~\ref{fig:example}, the forwarding path consists of the thick
lines from the ingress link at router $Z$ to the egress link at router
$X$.

\begin{figure}
\centerline{\epsfig{file=sandbox/figures/tweak.eps,width=0.25\textwidth, height=2in}}
\caption{Network with three egress routers connecting to two neighboring ASes: Solid lines correspond to physical links (annotated with IGP link weights) and dashed lines correspond to BGP sessions.  Thick lines illustrate the shortest path from one router to its closest egress point for reaching the destination.}
\label{fig:example}
\end{figure}

\begin{table}
\begin{small}
\begin{center}
\begin{tabular}{|l|} \hline
1. Highest local preference \\
2. Lowest AS path length \\
3. Lowest origin type   \\
4. Lowest MED (with {\em same\/} next-hop AS) \\
5. eBGP-learned over iBGP-learned \\
6. Lowest IGP path cost to egress router\\
7. Lowest router ID of BGP speaker \\
\hline
\end{tabular}
\end{center}
\end{small}
\caption{Steps in the BGP decision process}
\label{tab:decision}
\end{table}

%%%
%%% Tweaking policy
%%%
If the link between $X$ and AS $B$ becomes persistently congested, the network
operator may need to adjust the configuration of the routing protocols
to direct some of the traffic to other egress routers.  For example,
the operator could modify the import policy at router $X$ to make the
BGP routes for some destinations look less attractive than the routes
learned at other routers~\cite{Feamster2003e}.  Changing the import
policy causes $X$ to advertise a BGP route with a different attribute
value (e.g., a smaller {\em local preference\/}) to influence the
routing decisions throughout the network.  Ultimately, the change in
the import policy at $X$ has the {\em indirect\/} effect of directing
some of the traffic entering at router $Z$ to egress router $Y$ (the
next-closest egress point, in terms of the IGP path costs), thereby
alleviating the congestion on the link connecting $X$ to AS $B$.
Network operators make similar kinds of configuration changes for a
variety other reasons, such as exploiting new link capacity, preparing
for maintenance on part of the network, or reacting to equipment
failures.

%%%
%%% What-if models
%%%
Operators need to predict the effects of changes to the routing
protocol configuration before modifying the live network.  Human
intuition, while powerful, is not sufficient for understanding the
complex interactions between three routing protocols running on a
large, dynamic network.  Experimenting on the live network runs the
risk of making disruptive configuration changes that degrade
performance.  Instead, we believe that operators should have an
accurate and efficient tool that computes the effects of configuration
changes on the flow of traffic through the network.  The efficiency of
the model is of paramount importance, since a network operator (or an
automated optimization algorithm) may need to explore numerous
candidate configuration changes before identifying a choice that
satisfies the engineering goals.  Rather than simulating the complex
message-passing details of the protocols, the model needs only to
compute the {\em outcome\/}---the routing decision for each router
once the protocols have converged.  

\subsection{Challenges and Contributions}
%%%
%%% Contributions
%%%
In this paper, we present a model that accurately determines how the
network configuration and the routes learned via eBGP affect the flow
of traffic through an AS.  While some existing tools simulate BGP's
behavior~\cite{www-ssfnet}, our work is the first to develop a model
that determines the {\em outcome\/} of the BGP path selection process
at each router in an AS without simulating the dynamics of the
protocol.  This problem would be easy to solve if (i) the decision
process in Table~\ref{tab:decision} allowed each router to form a
consistent ranking of the candidate routes and (ii) the distribution
of routes in iBGP allowed each router to learn every route.  However,
two features of BGP conspire to make the problem much more challenging:

\begin{itemize}
\itemsep=-1pt
\item \textbf{The Multiple Exit Discriminator (MED) attribute breaks
the ranking of routes:} An eBGP neighbor can set the MED attribute of a
route advertisement to influence the behavior of the receiving AS.
For example, in Figure~\ref{fig:example} AS $B$ might send a route
with a MED of $10$ to router $Y$ and a MED of $20$ to router $X$;
% in order to receive traffic to the destination through router $Y$.
as a result, $Z$ would select the route from $Y$ with the smaller MED,
even though the IGP path to $X$ is shorter.  In practice, the MED
comparison in step~$4$ of the decision process applies only to routes
learned from the {\em same\/} next-hop AS.  When MEDs are used, the
decision process does {\em not\/} impose a total ordering on the
routes at each router; in fact, the choice of one route over another
may depend on the presence or absence of a third
route~\cite{determed}.

\item \textbf{Route reflectors limit the visibility their clients
have of the iBGP routes:} The quadratic scaling of a full-mesh iBGP
configuration forces large networks to distribute routes in a
hierarchical fashion.  A router configured as a route reflector
selects a single best route and forwards the route to its clients.
Using route reflectors reduces the number of iBGP sessions, as well as
the number of routes the clients need to receive and store.  However,
since a route reflector forwards only its {\em best\/} route to its
iBGP neighbors, the choices available at one router depend on
decisions at other routers.  In particular, the route reflector may
make a different choice in the sixth step of the decision process than
its clients would have.
%Thus, while route reflectors improve scalability, they also affect the
%outcome of the path-selection process in the network.
\end{itemize}

\noindent
These two features of BGP cannot be ignored because they are commonly
used to provide flexibility and scalability, respectively.

%%%
%%% Contributions
%%%
In this paper, we present a model of BGP path selection inside a
single AS, as well as algorithms to compute the routing decision
at each router.  Our main contributions are:

\begin{itemize}
\itemsep=-1pt
\item \textbf{Network-wide model of BGP path selection:}
Rather than analyzing BGP {\em dynamics\/}, we model the {\em
outcome\/} of the distributed path-selection process.  When a routing
system converges, the outcome does not depend on the order and timing
of the messages, allowing our algorithms to model a message ordering
that computes the outcome efficiently.

\item \textbf{Capturing the influence of MED and route reflectors:}
After presenting a simple algorithm for networks that disable MEDs and
have a full-mesh iBGP configuration, we present algorithms that handle
MED and route reflectors in isolation.  Then, we present another
algorithm that captures the complex interaction between the two
features.
%In modeling the two features together, we discover that route
%reflectors can interfere with the policy semantics of the MED
%attribute.

\item \textbf{Proposed improvements to BGP:} 
In addition to complicating the modeling problem, these two features
create difficulties for the operation of BGP itself.  We discuss ways
to improve the design and operation of BGP to avoid the harmful
effects without sacrificing the policy semantics of MEDs and the
scalability provided by route reflectors.
%In both cases, we find that having a network-wide
%view~\cite{rcp,bonaventure:04} of the BGP routing choices in each AS
%would be invaluable for providing the semantics of MED and the
%scalability of route reflectors without the harmful side-effects.
\end{itemize}

In Section~\ref{sec:setup}, we present practical constraints that
allow us to compute the outcome of the routing protocols and decompose
the modeling problem.  Section~\ref{sec:egress_set} presents a model
for BGP path selection for the simplified case of a full-mesh iBGP
configuration and no MED attribute\footnote{Throughout the paper, we
often describe BGP ``without MED''. Network configurations ``without
MED'' could also be viewed as a configuration that compares the MED
attributes across all routes (e.g., in Cisco IOS, this behavior can be
enabled with {\tt always-compare-med} setting).}.
Section~\ref{sec:med_model} focuses on modeling the MED attribute,
assuming a full-mesh iBGP configuration.  In
Section~\ref{sec:best_egress}, we consider more complex iBGP session
configurations.  Section~\ref{sec:discussion} presents improvements 
to BGP.  Section~\ref{sec:related} provides an overview of related 
work, and Section~\ref{sec:concl} concludes.  Appendix~\ref{sec:appendix} 
presents a brief summary of the design, evaluation, and validation of a 
tool that implements our model~\cite{feamster2004:whatif}.

